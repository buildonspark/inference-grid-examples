syntax = "proto3";

package core;

option go_package = "./";

//-----

message Identity {
  bytes public_key = 1;
  bytes signature = 2;
  bytes nonce = 3;
}

//-----

message Metadata {
  string name = 1;
  string url = 2;
  string logo_url = 3;
  string description = 4;
}

message RegisterClientRequest {
  Identity identity = 1;
  Metadata metadata = 2;
}

message RegisterClientResponse {
  bool ok = 1;
  string invoice = 2;
  string message = 3;
}

message RegisterProviderRequest {
  Identity identity = 1;
  Metadata metadata = 2;
}

message RegisterProviderResponse {
  bool ok = 1;
  string message = 2;
}

//-----

enum Role {
  CLIENT = 0;
  PROVIDER = 1;
}

enum Status {
  ACTIVE = 0;
  PENDING = 1;
  INACTIVE = 2;
}

message StatusRequest { string public_key = 1; }

message StatusResponse {
  string public_key = 1;
  Role role = 2;
  Status status = 3;
  Metadata metadata = 4;
}

//-----

message ConnectionRequest { Identity identity = 1; }

message ConnectionResponse {
  bool ok = 1;
  string message = 2;
}

//-----

enum ModelTier {
  TIER_0 = 0;
  TIER_1 = 1;
  TIER_2 = 2;
  TIER_3 = 3;
  TIER_4 = 4;
}

enum FeatureFlag {
  IMAGE = 0;
  TOOL_CALLS = 1;
  UNCENSORED = 2;
  OPEN_SOURCE = 3;
}

message Pricing {
  float sats_per_token_in = 1;
  float sats_per_token_out = 2;
  float sats_per_pixel = 3;
}

message RegisterModelRequest {
  string alias = 1;
  ModelTier tier = 2;
  Pricing pricing = 3;
  repeated FeatureFlag flags = 4;
}

message RegisterModelResponse {
  bool ok = 1;
  string message = 2;
}

//-----

message ChatCompletionMessageParts {
  repeated ChatCompletionMessagePart parts = 1;
}

message ChatCompletionMessagePart {
  string type = 1;
  string text = 2;
  ImageURL image_url = 3;
}

message ImageURL {
  string url = 1;
  string detail = 2;
}

message ChatCompletionMessage {
  string role = 1;
  oneof content {
    string text = 2;
    ChatCompletionMessageParts multi = 3;
  }
  string name = 4;
  string tool_call_id = 5;
}

message ChatCompletionRequest {
  int64 request_id = 1;
  int32 seed = 2;
  int32 max_tokens = 3;
  float temperature = 4;
  string tier_selector = 5;
  repeated FeatureFlag flags = 6;
  ResponseFormat response_format = 7;
  repeated Tool tools = 8;
  repeated ChatCompletionMessage messages = 9;
}

message ResponseFormat { string type = 1; }

message Tool {
  string type = 1;
  FunctionDescription function = 2;
}

message FunctionDescription {
  string name = 1;
  string description = 2;
  string parameters = 3;
}

message ToolCall {
  string id = 1;
  string type = 2;
  ToolCallFunction function = 3;
}

message ToolCallFunction {
  string name = 1;
  string arguments = 2;
}

message ChatCompletionPartial {
  int64 request_id = 1;
  int64 index = 2;
  string message = 3;
  repeated ToolCall tool_calls = 4;
  bool is_complete = 5;
}

message ChatCompletionComplete {
  int64 request_id = 1;
  string invoice = 2;
  int64 prompt_tokens = 3;
  int64 completion_tokens = 4;
}

message RevealPreimage {
  int64 request_id = 1;
  string preimage = 2;
}

message RelayError {
  int64 request_id = 1;
  string message = 2;
}

//-----

message MessageEnvelope {
  oneof payload {
    RegisterClientRequest register_client_request = 1;
    RegisterClientResponse register_client_response = 2;
    RegisterProviderRequest register_provider_request = 3;
    RegisterProviderResponse register_provider_response = 4;
    StatusRequest status_request = 5;
    StatusResponse status_response = 6;
    ConnectionRequest connection_request = 7;
    ConnectionResponse connection_response = 8;
    RegisterModelRequest register_model_request = 9;
    RegisterModelResponse register_model_response = 10;
    ChatCompletionRequest chat_completion_request = 11;
    ChatCompletionPartial chat_completion_partial = 12;
    ChatCompletionComplete chat_completion_complete = 13;
    RevealPreimage reveal_preimage = 14;
    RelayError relay_error = 15;
  }
}
